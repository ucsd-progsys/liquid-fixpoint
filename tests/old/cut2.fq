
// This qualifier saves the day; solve constraints WITHOUT IT
// qualif Zog(v:a)       : 10 <= v

// But you may use this one
qualif Pog(v:a)       : 0 <= v

constraint:
  env [ ]
  lhs {VV : int | [(VV = 0)]}
  rhs {VV : int | [k1]}
  id 0 


constraint:
  env [ x: {VV: int | [(VV = 10)] }
      ; a: {VV: int | [k1]}
      ]
  lhs {VV : int | [(VV = x + a)]}
  rhs {VV : int | [k0]}
  id 1 

constraint:
  env [ y: {VV: int | [(VV = 20)] }
      ; b: {VV: int | [k1]}
      ]
  lhs {VV : int | [(VV = y + b)]}
  rhs {VV : int | [k0]}
  id 2 


constraint:
  env [ ]
  lhs {VV : int | [k0]}
  rhs {VV : int | [k1]}
  id 3


constraint:
  env [a: {VV: int | [k0]}
      ]
  lhs {VV : int | [(VV = a)]}
  rhs {VV : int | [10 <= VV]}
  id 4 

wf:
  env [ ]
  reft {VV: int | [k0]}

wf:
  env [ ]
  reft {VV: int | [k1]}
